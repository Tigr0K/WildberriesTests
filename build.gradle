plugins {
    id 'java'
    id('io.qameta.allure') version '2.12.0'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0"
allure{
    report{
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks{
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}
def selenideVersion = "7.5.1", //7.5.1
    restAssuredVersion = "5.5.5",
    junitVersion = "5.9.3",
    ownerVersion = "1.0.12",
    slf4jVersion = "2.0.7"

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.aeonbits.owner:owner:$ownerVersion"
    )
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smokeTests(type: Test) {
    useJUnitPlatform {
        includeTags("SMOKE")
    }
}
task searchTests(type: Test) {
    useJUnitPlatform {
        includeTags("SearchTests")
    }
}
task basketTests(type: Test) {
    useJUnitPlatform {
        includeTags("BasketTests")
    }
}
